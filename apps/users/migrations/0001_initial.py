# Generated by Django 2.2.4 on 2019-08-26 09:05

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import users.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("address", "0001_initial"),
        ("auth", "0011_update_proxy_permissions"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID",),),
                ("password", models.CharField(max_length=128, verbose_name="password"),),
                ("last_login", models.DateTimeField(blank=True, null=True, verbose_name="last login"),),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                ("email", models.EmailField(max_length=254, unique=True, verbose_name="email address",),),
                ("first_name", models.CharField(blank=True, max_length=30, verbose_name="first name"),),
                ("last_name", models.CharField(blank=True, max_length=30, verbose_name="last name"),),
                ("phone", models.CharField(max_length=50)),
                ("birth_date", models.DateField(blank=True, null=True)),
                ("date_joined", models.DateTimeField(auto_now_add=True, verbose_name="date joined"),),
                ("is_active", models.BooleanField(default=True, verbose_name="active"),),
                ("is_staff", models.BooleanField(default=False, verbose_name="staff status"),),
                ("is_teacher", models.BooleanField(default=False, verbose_name="teacher status"),),
                ("avatar", models.ImageField(blank=True, null=True, upload_to="avatars/"),),
                ("address", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="address.Address",),),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={"verbose_name": "user", "verbose_name_plural": "users",},
            managers=[("objects", users.models.UserManager()),],
        ),
        migrations.CreateModel(
            name="Teacher",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID",),),
                ("phone", models.CharField(max_length=50)),
                ("pronoun", models.CharField(max_length=10)),
                ("birth_date", models.DateField(blank=True, null=True)),
                ("title", models.CharField(blank=True, max_length=30, null=True),),
                ("description", models.TextField(max_length=1000)),
                ("image", models.ImageField(blank=True, null=True, upload_to="user/teacher/"),),
                ("uploaded_at", models.DateTimeField(auto_now_add=True)),
                (
                    "address",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to="address.Address",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL,),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Staff",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID",),),
                ("phone", models.CharField(max_length=50)),
                ("pronoun", models.CharField(max_length=10)),
                ("birth_date", models.DateField(blank=True, null=True)),
                ("title", models.CharField(blank=True, max_length=30, null=True),),
                ("description", models.TextField(max_length=1000)),
                ("image", models.ImageField(blank=True, null=True, upload_to="user/staff/"),),
                ("uploaded_at", models.DateTimeField(auto_now_add=True)),
                (
                    "address",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to="address.Address",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL,),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Profile",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID",),),
                ("phone", models.CharField(max_length=50)),
                ("pronoun", models.CharField(max_length=10)),
                ("birth_date", models.DateField(blank=True, null=True)),
                ("uploaded_at", models.DateTimeField(auto_now_add=True)),
                ("address", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="address.Address",),),
                (
                    "user",
                    models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL,),
                ),
            ],
        ),
    ]
