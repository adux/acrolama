# Generated by Django 2.0.9 on 2019-04-30 08:21

import django.contrib.postgres.fields.ranges
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('home', '0031_address'),
        ('audiovisual', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Day',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.CharField(choices=[('0', 'Monday'), ('1', 'Tuesday'), ('2', 'Wednesday'), ('3', 'Thursday'), ('4', 'Friday'), ('5', 'Saturday'), ('6', 'Sunday')], max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('categorie', models.CharField(choices=[('MC', 'Masterclass'), ('FS', 'Festival'), ('CY', 'Cycle'), ('WS', 'Workshop'), ('CA', 'Camp'), ('RT', 'Retreat')], max_length=50)),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField(max_length=3000)),
                ('eventstart_date', models.DateField()),
                ('eventend_date', models.DateField()),
                ('max_participants', models.CharField(blank=True, max_length=5, null=True)),
                ('prerequisites', models.TextField(blank=True, max_length=2000, null=True)),
                ('highlights', models.TextField(blank=True, max_length=2000, null=True)),
                ('included', models.TextField(blank=True, max_length=2000, null=True)),
                ('food', models.TextField(blank=True, max_length=2000, null=True)),
                ('published', models.BooleanField()),
                ('registration', models.BooleanField(default=True)),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
                ('images', models.ManyToManyField(to='audiovisual.Image')),
            ],
        ),
        migrations.CreateModel(
            name='Exception',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('TI', 'Time'), ('LO', 'Location')], max_length=15)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Level',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('0', 'Multilevel'), ('1', 'Introduction'), ('2', 'Intermediate'), ('3', 'Advanced'), ('4', 'Profesional')], max_length=20)),
                ('description', models.TextField(blank=True, max_length=1000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('max_participants', models.CharField(blank=True, max_length=5, null=True)),
                ('description', models.TextField(blank=True, max_length=2000, null=True)),
                ('indication', models.TextField(blank=True, max_length=2000, null=True)),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.Address')),
                ('image', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='audiovisual.Image')),
            ],
        ),
        migrations.CreateModel(
            name='Policy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('description', models.TextField(max_length=2000)),
            ],
        ),
        migrations.CreateModel(
            name='PriceOption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('abonament', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=30)),
                ('description', models.TextField(max_length=1000)),
                ('reduction', models.BooleanField(default=False)),
                ('price_CHF', models.CharField(blank=True, max_length=5, null=True)),
                ('price_EURO', models.CharField(blank=True, max_length=5, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('description', models.TextField(max_length=2000)),
                ('todo', models.CharField(blank=True, max_length=120, null=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('title', models.CharField(max_length=20)),
                ('email', models.CharField(max_length=50)),
                ('phone', models.CharField(max_length=50)),
                ('picture', models.ImageField(blank=True, null=True, upload_to='team/')),
                ('description', models.TextField(blank=True, max_length=1000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TimeLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.Location')),
            ],
        ),
        migrations.CreateModel(
            name='TimeOption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('description', models.TextField(max_length=1000)),
                ('class_interval', django.contrib.postgres.fields.ranges.DateTimeRangeField()),
                ('doors_interval', django.contrib.postgres.fields.ranges.DateTimeRangeField()),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('days', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='project.Day')),
            ],
        ),
        migrations.AddField(
            model_name='timelocation',
            name='timeoptions',
            field=models.ManyToManyField(to='project.TimeOption'),
        ),
        migrations.AddField(
            model_name='project',
            name='manager',
            field=models.ManyToManyField(to='project.Team'),
        ),
        migrations.AddField(
            model_name='event',
            name='policy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.Policy'),
        ),
        migrations.AddField(
            model_name='event',
            name='priceoptions',
            field=models.ManyToManyField(to='project.PriceOption'),
        ),
        migrations.AddField(
            model_name='event',
            name='team',
            field=models.ManyToManyField(to='project.Team'),
        ),
        migrations.AddField(
            model_name='event',
            name='timelocation',
            field=models.ManyToManyField(to='project.TimeLocation'),
        ),
        migrations.AddField(
            model_name='event',
            name='videos',
            field=models.ManyToManyField(blank=True, to='audiovisual.Video'),
        ),
    ]
